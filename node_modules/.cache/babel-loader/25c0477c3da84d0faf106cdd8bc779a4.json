{"ast":null,"code":"var _jsxFileName = \"D:\\\\Frontend\\\\Projects\\\\_nagora\\\\project\\\\react_zen\\\\src\\\\layout\\\\Download\\\\Download.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\nimport Title from '../../components/Title/Title';\nimport Text from '../../components/Text/Text';\nimport Image from '../../components/Image/Image';\nimport { ReactComponent as AppleIcon } from './assets/apple_icon.svg';\nimport { ReactComponent as GoogleIcon } from './assets/google_icon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Download = _ref => {\n  _s();\n\n  let {\n    className,\n    data: {\n      title,\n      texts,\n      links,\n      image\n    },\n    targetSectionScrolling\n  } = _ref;\n  const {} = data;\n  const targetRef = useRef(null);\n  useEffect(() => {\n    console.log(targetRef.current.offsetTop);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: className ? className : 'download',\n    ref: targetRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${className}__wrapper`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${className}__body`,\n        children: [title && /*#__PURE__*/_jsxDEV(Title, {\n          className: className,\n          title: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), texts.length && texts.map(text => /*#__PURE__*/_jsxDEV(Text, {\n          className: className,\n          text: text\n        }, text, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${className}__links`,\n          children: links.length && links.map(link => /*#__PURE__*/_jsxDEV(\"a\", {\n            className: `${className}__link`,\n            href: link.url,\n            children: link.name === 'apple' ? /*#__PURE__*/_jsxDEV(AppleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(GoogleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 23\n            }, this)\n          }, link.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${className}__image`,\n        children: image && /*#__PURE__*/_jsxDEV(Image, {\n          dataType: className,\n          image: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Download, \"CQ5wYnrdrTRQ5S8z8hytqwFZSjA=\");\n\n_c = Download;\nexport default Download;\n\nvar _c;\n\n$RefreshReg$(_c, \"Download\");","map":{"version":3,"names":["useEffect","useRef","Title","Text","Image","ReactComponent","AppleIcon","GoogleIcon","Download","className","data","title","texts","links","image","targetSectionScrolling","targetRef","console","log","current","offsetTop","length","map","text","link","url","name"],"sources":["D:/Frontend/Projects/_nagora/project/react_zen/src/layout/Download/Download.js"],"sourcesContent":["import { useEffect, useRef } from 'react'\r\nimport Title from '../../components/Title/Title'\r\nimport Text from '../../components/Text/Text'\r\nimport Image from '../../components/Image/Image'\r\nimport { ReactComponent as AppleIcon } from './assets/apple_icon.svg'\r\nimport { ReactComponent as GoogleIcon } from './assets/google_icon.svg'\r\n\r\nconst Download = ({\r\n  className,\r\n   data: {\r\n    title, \r\n    texts, \r\n    links, \r\n    image\r\n   },\r\n   targetSectionScrolling\r\n  }) => {\r\n  const {\r\n   \r\n  } = data\r\n  const targetRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    console.log(targetRef.current.offsetTop)\r\n  }, [])\r\n\r\n  return (\r\n    <section\r\n      className={className \r\n        ? className \r\n        : 'download'\r\n      }\r\n      ref={targetRef}\r\n    >      \r\n      <div className={`${className}__wrapper`}>\r\n        <div className={`${className}__body`}>\r\n          {title && (\r\n            <Title \r\n              className={className} \r\n              title={title}\r\n            /> \r\n          )}\r\n          {texts.length && (\r\n            texts.map(text => \r\n              <Text \r\n                className={className} \r\n                text={text} \r\n                key={text}                  \r\n              />\r\n            )\r\n          )}\r\n          <div className={`${className}__links`}>\r\n            {links.length && (\r\n              links.map((link) => \r\n                <a className={`${className}__link`} href={link.url} key={link.name}>\r\n                  {link.name === 'apple' \r\n                    ? <AppleIcon/>\r\n                    : <GoogleIcon/>\r\n                  }\r\n                </a>\r\n              )\r\n            )}    \r\n          </div>               \r\n        </div>\r\n        <div className={`${className}__image`}>\r\n          {image && (\r\n            <Image \r\n              dataType={className} \r\n              image={image}                  \r\n            />\r\n          )}\r\n        </div>\r\n      </div>      \r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Download"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,SAASC,cAAc,IAAIC,SAA3B,QAA4C,yBAA5C;AACA,SAASD,cAAc,IAAIE,UAA3B,QAA6C,0BAA7C;;;AAEA,MAAMC,QAAQ,GAAG,QAST;EAAA;;EAAA,IATU;IAChBC,SADgB;IAEfC,IAAI,EAAE;MACLC,KADK;MAELC,KAFK;MAGLC,KAHK;MAILC;IAJK,CAFS;IAQfC;EARe,CASV;EACN,MAAM,KAEFL,IAFJ;EAGA,MAAMM,SAAS,GAAGf,MAAM,CAAC,IAAD,CAAxB;EAEAD,SAAS,CAAC,MAAM;IACdiB,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,OAAV,CAAkBC,SAA9B;EACD,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IACE,SAAS,EAAEX,SAAS,GAChBA,SADgB,GAEhB,UAHN;IAKE,GAAG,EAAEO,SALP;IAAA,uBAOE;MAAK,SAAS,EAAG,GAAEP,SAAU,WAA7B;MAAA,wBACE;QAAK,SAAS,EAAG,GAAEA,SAAU,QAA7B;QAAA,WACGE,KAAK,iBACJ,QAAC,KAAD;UACE,SAAS,EAAEF,SADb;UAEE,KAAK,EAAEE;QAFT;UAAA;UAAA;UAAA;QAAA,QAFJ,EAOGC,KAAK,CAACS,MAAN,IACCT,KAAK,CAACU,GAAN,CAAUC,IAAI,iBACZ,QAAC,IAAD;UACE,SAAS,EAAEd,SADb;UAEE,IAAI,EAAEc;QAFR,GAGOA,IAHP;UAAA;UAAA;UAAA;QAAA,QADF,CARJ,eAgBE;UAAK,SAAS,EAAG,GAAEd,SAAU,SAA7B;UAAA,UACGI,KAAK,CAACQ,MAAN,IACCR,KAAK,CAACS,GAAN,CAAWE,IAAD,iBACR;YAAG,SAAS,EAAG,GAAEf,SAAU,QAA3B;YAAoC,IAAI,EAAEe,IAAI,CAACC,GAA/C;YAAA,UACGD,IAAI,CAACE,IAAL,KAAc,OAAd,gBACG,QAAC,SAAD;cAAA;cAAA;cAAA;YAAA,QADH,gBAEG,QAAC,UAAD;cAAA;cAAA;cAAA;YAAA;UAHN,GAAyDF,IAAI,CAACE,IAA9D;YAAA;YAAA;YAAA;UAAA,QADF;QAFJ;UAAA;UAAA;UAAA;QAAA,QAhBF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eA8BE;QAAK,SAAS,EAAG,GAAEjB,SAAU,SAA7B;QAAA,UACGK,KAAK,iBACJ,QAAC,KAAD;UACE,QAAQ,EAAEL,SADZ;UAEE,KAAK,EAAEK;QAFT;UAAA;UAAA;UAAA;QAAA;MAFJ;QAAA;QAAA;QAAA;MAAA,QA9BF;IAAA;MAAA;MAAA;MAAA;IAAA;EAPF;IAAA;IAAA;IAAA;EAAA,QADF;AAiDD,CApED;;GAAMN,Q;;KAAAA,Q;AAsEN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}