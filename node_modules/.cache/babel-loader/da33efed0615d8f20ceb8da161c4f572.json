{"ast":null,"code":"var _jsxFileName = \"D:\\\\Frontend\\\\Projects\\\\react_zen\\\\src\\\\layout\\\\Download\\\\Download.js\";\nimport Title from '../../components/Title/Title';\nimport Text from '../../components/Text/Text';\nimport Image from '../../components/Image/Image';\nimport Link from './components/Link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Download = _ref => {\n  let {\n    className,\n    data\n  } = _ref;\n  const {\n    title,\n    texts,\n    links,\n    image\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    \"data-name\": className,\n    className: className ? className : 'download',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${className}__wrapper`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${className}__body`,\n          children: [title && /*#__PURE__*/_jsxDEV(Title, {\n            className: className,\n            title: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), texts && texts.map((text, i) => /*#__PURE__*/_jsxDEV(Text, {\n            className: className,\n            text: text\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${className}__links`,\n            children: links && links.map((link, i) => /*#__PURE__*/_jsxDEV(Link, {\n              className: className,\n              link: link\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${className}__image`,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            dataType: className,\n            image: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Download;\nexport default Download;\n\nvar _c;\n\n$RefreshReg$(_c, \"Download\");","map":{"version":3,"names":["Title","Text","Image","Link","Download","className","data","title","texts","links","image","map","text","i","link"],"sources":["D:/Frontend/Projects/react_zen/src/layout/Download/Download.js"],"sourcesContent":["import Title from '../../components/Title/Title'\r\nimport Text from '../../components/Text/Text'\r\nimport Image from '../../components/Image/Image'\r\nimport Link from './components/Link'\r\n\r\nconst Download = ({\r\n  className, \r\n  data\r\n}) => {\r\n\r\n  const {\r\n    title, \r\n    texts, \r\n    links, \r\n    image\r\n  } = data\r\n\r\n  return (\r\n    <section \r\n      data-name={className}\r\n      className={className ? className : 'download'}\r\n    >\r\n      <div className='container'>\r\n        <div className={`${className}__wrapper`}>\r\n          <div className={`${className}__body`}>\r\n            {title && \r\n              <Title \r\n                className={className} \r\n                title={title}/> \r\n            }\r\n            {texts && (\r\n              texts.map((text, i) => \r\n                <Text \r\n                  className={className} \r\n                  text={text} \r\n                  key={i}/>\r\n              )\r\n            )}\r\n            <div className={`${className}__links`}>\r\n              {links && (\r\n                links.map((link, i) => \r\n                  <Link \r\n                    className={className} \r\n                    link={link} \r\n                    key={i}/>\r\n                )\r\n              )}    \r\n            </div>               \r\n          </div>\r\n          <div className={`${className}__image`}>\r\n            <Image \r\n            dataType={className} image={image}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Download"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,8BAAlB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,MAAMC,QAAQ,GAAG,QAGX;EAAA,IAHY;IAChBC,SADgB;IAEhBC;EAFgB,CAGZ;EAEJ,MAAM;IACJC,KADI;IAEJC,KAFI;IAGJC,KAHI;IAIJC;EAJI,IAKFJ,IALJ;EAOA,oBACE;IACE,aAAWD,SADb;IAEE,SAAS,EAAEA,SAAS,GAAGA,SAAH,GAAe,UAFrC;IAAA,uBAIE;MAAK,SAAS,EAAC,WAAf;MAAA,uBACE;QAAK,SAAS,EAAG,GAAEA,SAAU,WAA7B;QAAA,wBACE;UAAK,SAAS,EAAG,GAAEA,SAAU,QAA7B;UAAA,WACGE,KAAK,iBACJ,QAAC,KAAD;YACE,SAAS,EAAEF,SADb;YAEE,KAAK,EAAEE;UAFT;YAAA;YAAA;YAAA;UAAA,QAFJ,EAMGC,KAAK,IACJA,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACR,QAAC,IAAD;YACE,SAAS,EAAER,SADb;YAEE,IAAI,EAAEO;UAFR,GAGOC,CAHP;YAAA;YAAA;YAAA;UAAA,QADF,CAPJ,eAcE;YAAK,SAAS,EAAG,GAAER,SAAU,SAA7B;YAAA,UACGI,KAAK,IACJA,KAAK,CAACE,GAAN,CAAU,CAACG,IAAD,EAAOD,CAAP,kBACR,QAAC,IAAD;cACE,SAAS,EAAER,SADb;cAEE,IAAI,EAAES;YAFR,GAGOD,CAHP;cAAA;cAAA;cAAA;YAAA,QADF;UAFJ;YAAA;YAAA;YAAA;UAAA,QAdF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eA0BE;UAAK,SAAS,EAAG,GAAER,SAAU,SAA7B;UAAA,uBACE,QAAC,KAAD;YACA,QAAQ,EAAEA,SADV;YACqB,KAAK,EAAEK;UAD5B;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QA1BF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAJF;IAAA;IAAA;IAAA;EAAA,QADF;AAwCD,CApDD;;KAAMN,Q;AAsDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}